---
import Hamburger from './Hamburger.astro';
const navItems = [
	{ label: 'Sample Item', href: '/sample' },
	{ label: 'Sample Item 2', href: '/sample-2' },
	{ label: 'Sample Item 3', href: '/sample-3' },
	{ label: 'Sample Item 4', href: '/sample-4' },
	{ label: 'Sample Item 5', href: '/sample-5' },
];
---

<nav>
	<div class="nav-wrapper">
		<div class="nav-group-logo">
			<a href="/"></a>
		</div>
		<button id="menu-toggle" class="btn" aria-controls="menu-main-group" aria-expanded="false">
			<Hamburger />
			<span class="menu-toggle-text visually-hidden">Menu</span></button
		>
		<div class="nav-group-main nav-mobile-hidden" id="menu-main-group">
			<div class="nav-links-group">
				{
					navItems.map((item) => (
						<a
							data-astro-prefetch
							href={item.href}
							class:list={['nav-item', item.href === '' && 'nav-item-inactive']}
						>
							{item.label}
						</a>
					))
				}
			</div>
		</div>
	</div>
</nav>

<style>
	nav {
		--size-navbar-padding: 1rem;
		display: flex;
		justify-content: center;
		align-items: center;
		padding: var(--size-navbar-padding);
		border-bottom: 1px solid var(--color-borders);
	}
	.nav-wrapper {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		width: 100%;
		position: relative;
		text-align: center;
		overflow-y: auto;
	}

	.nav-links-group {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0rem;
	}

	#menu-main-group {
		position: fixed;
		top: 0px;
		left: 0px;
		right: 0px;
		height: 100%;
		/* padding: 1rem; */
		/* overflow-y: auto; */
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 0rem;

		overflow-y: auto;
		z-index: 10;
		transform: none;
		transition: all 0.3s;
		backdrop-filter: blur(20px);
	}

	#menu-toggle[aria-expanded='false'] + #menu-main-group {
		display: none;
	}
	#menu-toggle[aria-expanded='true'] + #menu-main-group,
	#menu-toggle + #menu-main-group:focus-within {
		display: flex;
	}
	h2 {
		margin-top: 1rem;
		margin-bottom: 0.5rem;
	}

	#menu-toggle {
		z-index: 50;
		display: flex;
		flex-direction: column;
		align-items: center;
	}

	.menu-toggle-icon {
		font-size: 1.5rem;
	}
	.menu-toggle-text {
	}

	#menu-toggle[aria-expanded='true'] {
		position: fixed;
		top: var(--size-navbar-padding);
		right: var(--size-navbar-padding);
	}

	.nav-item {
		padding: 1rem 2rem;
		text-decoration: none;
		font-size: 1.5rem;
	}
	.nav-group-contribute {
		margin-top: 1rem;
	}

	.nav-group-logo {
		display: flex;
		justify-content: center;
		align-items: center;
	}
	@media screen and (min-width: 900px) {
		nav {
			border-bottom: none;
		}
		.nav-wrapper {
			flex-direction: row;
			width: 100%;
			max-width: var(--size-padded-page);
			justify-content: space-between;
		}
		.nav-item {
			padding: 0;
			font-size: 1rem;
		}
		.nav-group-contribute {
			margin: 0;
		}
		.nav-group-main {
			flex-grow: 1;
			justify-content: space-between;
			padding-left: 4rem;
		}
		.nav-links-group {
			flex-direction: row;
			gap: 2rem;
		}
		#menu-toggle[aria-expanded] + #menu-main-group {
			display: flex;
			position: static;
			flex-direction: row;
			align-items: center;
			gap: 2rem;
		}
		#menu-toggle,
		#menu-close {
			display: none;
		}
	}
</style>

<script type="text/javascript">
	const hideMobileMenu = () => {
		document.querySelector('#menu-toggle')?.setAttribute('aria-expanded', 'false');
	};

	document.querySelector('#menu-toggle')?.addEventListener('click', () => {
		const menuToggle = document.querySelector('#menu-toggle');
		const isExpanded = menuToggle?.getAttribute('aria-expanded') === 'true';
		menuToggle?.setAttribute('aria-expanded', String(!isExpanded));
	});

	window.addEventListener('keyup', (e) => {
		if (e.key === 'Escape') {
			hideMobileMenu();
			document.querySelector('#menu-toggle')?.focus();
		}
	});

	const desktopQuery = window.matchMedia('(min-width: 768px)');
	desktopQuery.addEventListener('change', () => {
		hideMobileMenu();
	});

	// Hide the mobile menu when focus moves outside of it
	document.querySelector('#menu-main-group')?.addEventListener('focusout', (e) => {
		const menu = e.currentTarget;
		if (!menu.contains(e.relatedTarget)) {
			hideMobileMenu();
		}
	});
</script>
